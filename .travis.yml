

matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js:
        - 'lts/erbium'
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: node_js
      node_js:
        - 'lts/erbium'

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder


before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

install:
  - env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_' > bwatch.env

script:
  - ./build.sh

deploy:
  - provider: script
    script:
      - |
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          docker run --rm \
            --env-file bwatch.env \
            -v ${PWD}:/project \
            -v ~/.cache/electron:/root/.cache/electron \
            -v ~/.cache/electron-builder:/root/.cache/electron-builder \
            electronuserland/builder:wine \
            /bin/bash -c "./build.sh && cd electron-app && yarn deploy --linux --win"
        else
          /bin/bash -c "./build.sh && cd electron-app && yarn deploy --mac"
        fi
    skip_cleanup: true
    on:
      tags: true
  - provider: script
    script:
      - |
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          docker run --rm \
            --env-file bwatch.env \
            -v ${PWD}:/project \
            -v ~/.cache/electron:/root/.cache/electron \
            -v ~/.cache/electron-builder:/root/.cache/electron-builder \
            electronuserland/builder:wine \
            /bin/bash -c "./build.sh && cd electron-app && yarn dist --linux --win"
        else
          /bin/bash -c "./build.sh && cd electron-app && yarn dist --mac"
        fi
    skip_cleanup: true
    on:
      tags: false
      all_branches: true
